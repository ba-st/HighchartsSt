Class {
	#name : #HighstockNavigationAnnotationsOptionsControlPointOptionsTest,
	#superclass : #TestCase,
	#category : #'HighstockSt-V8-Tests'
}

{ #category : #'tests-accessing' }
HighstockNavigationAnnotationsOptionsControlPointOptionsTest >> testGetStyle [

	| component javascript expectedConfiguration |

	component := HighstockNavigationAnnotationsOptionsControlPointOptions new.
	component style.
	javascript := String streamContents: [ :stream | component javascriptContentOn: stream ].
	expectedConfiguration := Dictionary new
		at: 'style' put: Dictionary new;
		yourself.
	self assert: javascript equals: expectedConfiguration asJavascript
]

{ #category : #'tests-accessing' }
HighstockNavigationAnnotationsOptionsControlPointOptionsTest >> testSetHeight [

	| component javascript expectedConfiguration |

	component := HighstockNavigationAnnotationsOptionsControlPointOptions new.
	component height: 'test'.
	javascript := String streamContents: [ :stream | component javascriptContentOn: stream ].
	expectedConfiguration := Dictionary new
		at: 'height' put: 'test';
		yourself.
	self assert: javascript equals: expectedConfiguration asJavascript
]

{ #category : #'tests-accessing' }
HighstockNavigationAnnotationsOptionsControlPointOptionsTest >> testSetPositioner [

	| component javascript expectedConfiguration |

	component := HighstockNavigationAnnotationsOptionsControlPointOptions new.
	component positioner: 'test'.
	javascript := String streamContents: [ :stream | component javascriptContentOn: stream ].
	expectedConfiguration := Dictionary new
		at: 'positioner' put: 'test';
		yourself.
	self assert: javascript equals: expectedConfiguration asJavascript
]

{ #category : #'tests-accessing' }
HighstockNavigationAnnotationsOptionsControlPointOptionsTest >> testSetSymbol [

	| component javascript expectedConfiguration |

	component := HighstockNavigationAnnotationsOptionsControlPointOptions new.
	component symbol: 'test'.
	javascript := String streamContents: [ :stream | component javascriptContentOn: stream ].
	expectedConfiguration := Dictionary new
		at: 'symbol' put: 'test';
		yourself.
	self assert: javascript equals: expectedConfiguration asJavascript
]

{ #category : #'tests-accessing' }
HighstockNavigationAnnotationsOptionsControlPointOptionsTest >> testSetVisible [

	| component javascript expectedConfiguration |

	component := HighstockNavigationAnnotationsOptionsControlPointOptions new.
	component visible: 'test'.
	javascript := String streamContents: [ :stream | component javascriptContentOn: stream ].
	expectedConfiguration := Dictionary new
		at: 'visible' put: 'test';
		yourself.
	self assert: javascript equals: expectedConfiguration asJavascript
]

{ #category : #'tests-accessing' }
HighstockNavigationAnnotationsOptionsControlPointOptionsTest >> testSetWidth [

	| component javascript expectedConfiguration |

	component := HighstockNavigationAnnotationsOptionsControlPointOptions new.
	component width: 'test'.
	javascript := String streamContents: [ :stream | component javascriptContentOn: stream ].
	expectedConfiguration := Dictionary new
		at: 'width' put: 'test';
		yourself.
	self assert: javascript equals: expectedConfiguration asJavascript
]

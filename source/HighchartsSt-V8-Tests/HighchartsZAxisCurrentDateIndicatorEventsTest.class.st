Class {
	#name : #HighchartsZAxisCurrentDateIndicatorEventsTest,
	#superclass : #TestCase,
	#category : #'HighchartsSt-V8-Tests'
}

{ #category : #'tests-accessing' }
HighchartsZAxisCurrentDateIndicatorEventsTest >> testClick [

	| component javascript expectedConfiguration |

	component := HighchartsZAxisCurrentDateIndicatorEvents new.
	component click: 'test'.
	javascript := String streamContents: [ :stream | component javascriptContentOn: stream ].
	expectedConfiguration := Dictionary new
		at: 'click' put: 'test';
		yourself.
	self assert: javascript equals: expectedConfiguration asJavascript
]

{ #category : #'tests-accessing' }
HighchartsZAxisCurrentDateIndicatorEventsTest >> testMousemove [

	| component javascript expectedConfiguration |

	component := HighchartsZAxisCurrentDateIndicatorEvents new.
	component mousemove: 'test'.
	javascript := String streamContents: [ :stream | component javascriptContentOn: stream ].
	expectedConfiguration := Dictionary new
		at: 'mousemove' put: 'test';
		yourself.
	self assert: javascript equals: expectedConfiguration asJavascript
]

{ #category : #'tests-accessing' }
HighchartsZAxisCurrentDateIndicatorEventsTest >> testMouseout [

	| component javascript expectedConfiguration |

	component := HighchartsZAxisCurrentDateIndicatorEvents new.
	component mouseout: 'test'.
	javascript := String streamContents: [ :stream | component javascriptContentOn: stream ].
	expectedConfiguration := Dictionary new
		at: 'mouseout' put: 'test';
		yourself.
	self assert: javascript equals: expectedConfiguration asJavascript
]

{ #category : #'tests-accessing' }
HighchartsZAxisCurrentDateIndicatorEventsTest >> testMouseover [

	| component javascript expectedConfiguration |

	component := HighchartsZAxisCurrentDateIndicatorEvents new.
	component mouseover: 'test'.
	javascript := String streamContents: [ :stream | component javascriptContentOn: stream ].
	expectedConfiguration := Dictionary new
		at: 'mouseover' put: 'test';
		yourself.
	self assert: javascript equals: expectedConfiguration asJavascript
]
